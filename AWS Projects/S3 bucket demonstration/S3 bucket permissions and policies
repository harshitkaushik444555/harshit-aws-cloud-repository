1. Create a S3 bucket : app1-payment-bucket-example.com
2. Upload an index.html file from the laptop
3. create an IAM user without any permissions and login in another tab and try to access S3 buckets.
4. You will see a warning as "You don't have permissions to list buckets".
5. Now go to root user tab, go to IAM user and go to bucket user.
6. Attact AmazonS3FullAccess permissions to that user.
7. Now try to refresh on bucket user tab, you will see all the buckets.

Above is the process of how you can attach and restrict permissions to an user using user permissions.
Now, we will see how we can restrict access to S3 bucket using S3 bucket policies.
1. Go to bucket
2. click on bucket permissions
3. edit bucket policies as follows
{
  "Version": "2012-10-17",
  "Id": "RestrictBucketToIAMUsersOnly",
  "Statement": [
    {
      "Sid": "AllowOwnerOnlyAccess",
      "Effect": "Deny",
      "Principal": "*",
      "Action": "s3:*",
      "Resource": [
        "arn:aws:s3:::your-bucket-name/*",
        "arn:aws:s3:::your-bucket-name"
      ],
      "Condition": {
        "StringNotEquals": {
          "aws:PrincipalArn": "arn:aws:iam::AWS_ACCOUNT_ID:root"
        }
      }
    }
  ]
}

4. save and exit

after doing so iam user will be able to list buckets but  can't see objects inside the bucket.

The "Principal" element specifies who is allowed or denied access to the specified resources. It defines the AWS accounts, IAM users, or roles that the policy applies to.

How S3 is cost effective?
You can set s3 to delete the previous version of files after 10 days or any time or you can send the previos version of file to the deep archive or s3 glacier to reduce the cost.
